/*
 * Travel Billing
 * The Travel Invoicing Application System
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.BusinessAddress;
import org.openapitools.client.model.BusinessPerson;
import org.openapitools.client.model.OperationRequestOrderOrderItemsInnerProductItemsInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * OperationRequestOrderOrderItemsInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-07-04T15:12:40.475542300+02:00[Europe/Paris]")
public class OperationRequestOrderOrderItemsInner {
  public static final String SERIALIZED_NAME_SHIPMENT_ADDRESS = "shipmentAddress";
  @SerializedName(SERIALIZED_NAME_SHIPMENT_ADDRESS)
  private BusinessAddress shipmentAddress;

  public static final String SERIALIZED_NAME_SHIPMENT_CONTACT = "shipmentContact";
  @SerializedName(SERIALIZED_NAME_SHIPMENT_CONTACT)
  private BusinessPerson shipmentContact;

  public static final String SERIALIZED_NAME_DELIVERED_ON = "deliveredOn";
  @SerializedName(SERIALIZED_NAME_DELIVERED_ON)
  private LocalDate deliveredOn;

  public static final String SERIALIZED_NAME_PRODUCT_ITEMS = "productItems";
  @SerializedName(SERIALIZED_NAME_PRODUCT_ITEMS)
  private List<OperationRequestOrderOrderItemsInnerProductItemsInner> productItems = null;

  public OperationRequestOrderOrderItemsInner() { 
  }

  public OperationRequestOrderOrderItemsInner shipmentAddress(BusinessAddress shipmentAddress) {
    
    this.shipmentAddress = shipmentAddress;
    return this;
  }

   /**
   * Get shipmentAddress
   * @return shipmentAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BusinessAddress getShipmentAddress() {
    return shipmentAddress;
  }


  public void setShipmentAddress(BusinessAddress shipmentAddress) {
    this.shipmentAddress = shipmentAddress;
  }


  public OperationRequestOrderOrderItemsInner shipmentContact(BusinessPerson shipmentContact) {
    
    this.shipmentContact = shipmentContact;
    return this;
  }

   /**
   * Get shipmentContact
   * @return shipmentContact
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BusinessPerson getShipmentContact() {
    return shipmentContact;
  }


  public void setShipmentContact(BusinessPerson shipmentContact) {
    this.shipmentContact = shipmentContact;
  }


  public OperationRequestOrderOrderItemsInner deliveredOn(LocalDate deliveredOn) {
    
    this.deliveredOn = deliveredOn;
    return this;
  }

   /**
   * Order delivery date
   * @return deliveredOn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Thu Apr 28 02:00:00 CEST 2022", value = "Order delivery date")

  public LocalDate getDeliveredOn() {
    return deliveredOn;
  }


  public void setDeliveredOn(LocalDate deliveredOn) {
    this.deliveredOn = deliveredOn;
  }


  public OperationRequestOrderOrderItemsInner productItems(List<OperationRequestOrderOrderItemsInnerProductItemsInner> productItems) {
    
    this.productItems = productItems;
    return this;
  }

  public OperationRequestOrderOrderItemsInner addProductItemsItem(OperationRequestOrderOrderItemsInnerProductItemsInner productItemsItem) {
    if (this.productItems == null) {
      this.productItems = new ArrayList<>();
    }
    this.productItems.add(productItemsItem);
    return this;
  }

   /**
   * Get productItems
   * @return productItems
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<OperationRequestOrderOrderItemsInnerProductItemsInner> getProductItems() {
    return productItems;
  }


  public void setProductItems(List<OperationRequestOrderOrderItemsInnerProductItemsInner> productItems) {
    this.productItems = productItems;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OperationRequestOrderOrderItemsInner operationRequestOrderOrderItemsInner = (OperationRequestOrderOrderItemsInner) o;
    return Objects.equals(this.shipmentAddress, operationRequestOrderOrderItemsInner.shipmentAddress) &&
        Objects.equals(this.shipmentContact, operationRequestOrderOrderItemsInner.shipmentContact) &&
        Objects.equals(this.deliveredOn, operationRequestOrderOrderItemsInner.deliveredOn) &&
        Objects.equals(this.productItems, operationRequestOrderOrderItemsInner.productItems);
  }

  @Override
  public int hashCode() {
    return Objects.hash(shipmentAddress, shipmentContact, deliveredOn, productItems);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OperationRequestOrderOrderItemsInner {\n");
    sb.append("    shipmentAddress: ").append(toIndentedString(shipmentAddress)).append("\n");
    sb.append("    shipmentContact: ").append(toIndentedString(shipmentContact)).append("\n");
    sb.append("    deliveredOn: ").append(toIndentedString(deliveredOn)).append("\n");
    sb.append("    productItems: ").append(toIndentedString(productItems)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("shipmentAddress");
    openapiFields.add("shipmentContact");
    openapiFields.add("deliveredOn");
    openapiFields.add("productItems");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to OperationRequestOrderOrderItemsInner
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (OperationRequestOrderOrderItemsInner.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in OperationRequestOrderOrderItemsInner is not found in the empty JSON string", OperationRequestOrderOrderItemsInner.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!OperationRequestOrderOrderItemsInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OperationRequestOrderOrderItemsInner` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      // validate the optional field `shipmentAddress`
      if (jsonObj.getAsJsonObject("shipmentAddress") != null) {
        BusinessAddress.validateJsonObject(jsonObj.getAsJsonObject("shipmentAddress"));
      }
      // validate the optional field `shipmentContact`
      if (jsonObj.getAsJsonObject("shipmentContact") != null) {
        BusinessPerson.validateJsonObject(jsonObj.getAsJsonObject("shipmentContact"));
      }
      JsonArray jsonArrayproductItems = jsonObj.getAsJsonArray("productItems");
      if (jsonArrayproductItems != null) {
        // ensure the json data is an array
        if (!jsonObj.get("productItems").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `productItems` to be an array in the JSON string but got `%s`", jsonObj.get("productItems").toString()));
        }

        // validate the optional field `productItems` (array)
        for (int i = 0; i < jsonArrayproductItems.size(); i++) {
          OperationRequestOrderOrderItemsInnerProductItemsInner.validateJsonObject(jsonArrayproductItems.get(i).getAsJsonObject());
        };
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OperationRequestOrderOrderItemsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OperationRequestOrderOrderItemsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OperationRequestOrderOrderItemsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OperationRequestOrderOrderItemsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<OperationRequestOrderOrderItemsInner>() {
           @Override
           public void write(JsonWriter out, OperationRequestOrderOrderItemsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OperationRequestOrderOrderItemsInner read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of OperationRequestOrderOrderItemsInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of OperationRequestOrderOrderItemsInner
  * @throws IOException if the JSON string is invalid with respect to OperationRequestOrderOrderItemsInner
  */
  public static OperationRequestOrderOrderItemsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OperationRequestOrderOrderItemsInner.class);
  }

 /**
  * Convert an instance of OperationRequestOrderOrderItemsInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

